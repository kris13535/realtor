{"ast":null,"code":"var _jsxFileName = \"/Users/kristina/Desktop/experis/week_9/img_page/src/components/gallery_boxs/gallery.jsx\";\nimport React from 'react';\nimport Card from \"./card.jsx\";\nimport Filters from \"./filters\";\nimport { apartments } from \"../app_data/apartments_array\";\nimport { cities } from \"../app_data/cities_array\";\n\nclass Gallery extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateGalleryItems = data => {\n      let array = apartments;\n\n      function checkRange(min, max, value) {\n        // console.log('min',data.price_min , \"    max \", data.price_max);\n        min = min === undefined || min === \"\" ? 0 : min;\n        max = max === undefined || max === \"\" ? Infinity : max; //\n        // console.log(data.price_min);\n        // console.log(data.price_max);\n        // console.log(data.bed_max);\n        // console.log(data.bed_min);\n\n        console.log(data);\n\n        if (min === data.price_max || max === data.price_min) {\n          return value.price >= min && value.price <= max;\n        } else if (min === data.bed_min || max === data.bed_max) {\n          return value.number_of_rooms >= min && value.number_of_rooms <= max;\n        }\n      }\n\n      if (data.city) {\n        array = apartments.filter(function (apartment) {\n          const city = cities.find(city => city.id === apartment.cityId);\n          const city_name = city.label;\n\n          if (city_name.includes(data.city)) {\n            return array;\n          }\n        });\n      } else if (data.price_min || data.price_max) {\n        if (data.price_min && typeof data.price_min != \"number\") {\n          let multiplication_price_min = data.price_min.slice(-1);\n\n          if (multiplication_price_min === \"k\") {\n            data.price_min = parseInt(data.price_min.slice(1)) * 1000;\n          } else if (multiplication_price_min === \"M\") {\n            data.price_min = parseInt(data.price_min.slice(1)) * 1000000;\n          }\n        }\n\n        if (data.price_max && typeof data.price_max !== \"number\") {\n          let multiplication_price_max = data.price_max.slice(-1);\n\n          if (multiplication_price_max === \"k\") {\n            data.price_max = parseInt(data.price_max.slice(1)) * 1000;\n          } else if (multiplication_price_max === \"M\") {\n            data.price_max = parseInt(data.price_max.slice(1)) * 1000000;\n          }\n        } // console.log(data.price_max);\n        // console.log(data.price_min);\n\n\n        if (data.price_max || data.price_min) {\n          array = array.filter(obj => checkRange(data.price_min, data.price_max, obj));\n        }\n      } else if (data.bed_min || data.bed_max) {\n        array = array.filter(obj => checkRange(data.bed_min, data.bed_max, obj));\n      }\n\n      this.setState({\n        apartments: array\n      });\n    };\n\n    this.state = {\n      apartments: apartments\n    };\n  }\n\n  render() {\n    const apartments = this.state.apartments;\n\n    const buildSquareDetails = () => {\n      return apartments.map((item, i) => {\n        return React.createElement(Card, Object.assign({}, item, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }));\n      });\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Filters, {\n      updateGalleryItems: this.updateGalleryItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, buildSquareDetails()));\n  }\n\n}\n\nexport default Gallery;","map":{"version":3,"sources":["/Users/kristina/Desktop/experis/week_9/img_page/src/components/gallery_boxs/gallery.jsx"],"names":["React","Card","Filters","apartments","cities","Gallery","Component","constructor","props","updateGalleryItems","data","array","checkRange","min","max","value","undefined","Infinity","console","log","price_max","price_min","price","bed_min","bed_max","number_of_rooms","city","filter","apartment","find","id","cityId","city_name","label","includes","multiplication_price_min","slice","parseInt","multiplication_price_max","obj","setState","state","render","buildSquareDetails","map","item","i"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Card from \"./card.jsx\";\nimport Filters from \"./filters\";\nimport {apartments} from \"../app_data/apartments_array\";\nimport {cities} from \"../app_data/cities_array\";\n\nclass Gallery extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apartments: apartments,\n        }\n    }\n\n    updateGalleryItems = (data) => {\n\n        let array = apartments;\n\n        function checkRange( min, max, value){\n            // console.log('min',data.price_min , \"    max \", data.price_max);\n\n\n            min = (min === undefined || min === \"\") ?  0 : min;\n            max = (max === undefined || max === \"\") ?  Infinity : max;\n            //\n            // console.log(data.price_min);\n            // console.log(data.price_max);\n            // console.log(data.bed_max);\n            // console.log(data.bed_min);\n\n            console.log(data)\n\n            if  ( min === data.price_max || max === data.price_min){\n                return (value.price >= min && value.price <= max);\n            } else if (min === data.bed_min || max === data.bed_max) {\n                return (value.number_of_rooms >= min && value.number_of_rooms <= max);\n            }\n        }\n\n        if (data.city) {\n            array = apartments.filter(function (apartment) {\n                const city = cities.find(city => city.id === apartment.cityId);\n                const city_name = city.label;\n                if (city_name.includes(data.city)) {\n                    return array;\n                }\n            });\n        }\n\n        else if (data.price_min || data.price_max) {\n            if (data.price_min && typeof data.price_min != \"number\") {\n                let multiplication_price_min = data.price_min.slice(-1);\n\n                if (multiplication_price_min === \"k\") {\n                    data.price_min = parseInt(data.price_min.slice(1)) * 1000;\n                } else if (multiplication_price_min === \"M\") {\n                    data.price_min = parseInt(data.price_min.slice(1)) * 1000000;\n                }\n            }\n\n            if (data.price_max && typeof data.price_max !== \"number\") {\n                let multiplication_price_max = data.price_max.slice(-1);\n\n                if (multiplication_price_max === \"k\") {\n                    data.price_max = parseInt(data.price_max.slice(1)) * 1000;\n                } else if (multiplication_price_max === \"M\") {\n                    data.price_max = parseInt(data.price_max.slice(1)) * 1000000;\n                }\n            }\n\n            // console.log(data.price_max);\n            // console.log(data.price_min);\n\n            if  (data.price_max || data.price_min){\n                array = array.filter (obj => checkRange(data.price_min, data.price_max,obj));\n            }\n        }\n\n        else if (data.bed_min || data.bed_max) {\n                array = array.filter (obj => checkRange(data.bed_min, data.bed_max,obj));\n        }\n\n\n\n\n\n        this.setState({\n            apartments: array,\n        });\n\n    }\n\n    render() {\n\n        const {apartments} = this.state;\n\n        const buildSquareDetails = () => {\n            return apartments.map((item, i) => {\n                return (\n                    <Card {...item} key={i}/>\n                )\n            })\n        };\n\n        return (\n            <div>\n                <div>\n                    <Filters updateGalleryItems={this.updateGalleryItems}/>\n                </div>\n\n                <div className={\"row\"}>\n                    {buildSquareDetails()}\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}