{"ast":null,"code":"var _jsxFileName = \"/Users/kristina/Desktop/experis/week_9/img_page/src/components/gallery_boxs/gallery.jsx\";\nimport React from 'react';\nimport Card from \"./card.jsx\";\nimport Filters from \"./filters\";\nimport { apartments } from \"../app_data/apartments_array\";\nimport { cities } from \"../app_data/cities_array\";\n\nclass Gallery extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateGalleryItems = data => {\n      let array = apartments;\n\n      const checkRange = (min, max, value, label) => {\n        // console.log('min',data.price_min , \"    max \", data.price_max);\n        console.log(value.number_of_beds);\n        console.log(value[label]);\n        console.log(min);\n        console.log(max);\n        min = min === undefined || min === \"\" ? 0 : min;\n        max = max === undefined || max === \"\" ? Infinity : max;\n        return value[label] >= min && value[label] <= max;\n      };\n\n      if (data.city) {\n        array = apartments.filter(function (apartment) {\n          const city = cities.find(city => city.id === apartment.cityId);\n          const city_name = city.label;\n\n          if (city_name.includes(data.city)) {\n            return array;\n          }\n        });\n      } else if (data.price_min || data.price_max) {\n        if (data.price_min && typeof data.price_min != \"number\") {\n          let multiplication_price_min = data.price_min.slice(-1);\n\n          if (multiplication_price_min === \"k\") {\n            data.price_min = parseInt(data.price_min.slice(1)) * 1000;\n          } else if (multiplication_price_min === \"M\") {\n            data.price_min = parseInt(data.price_min.slice(1)) * 1000000;\n          }\n        }\n\n        if (data.price_max && typeof data.price_max !== \"number\") {\n          let multiplication_price_max = data.price_max.slice(-1);\n\n          if (multiplication_price_max === \"k\") {\n            data.price_max = parseInt(data.price_max.slice(1)) * 1000;\n          } else if (multiplication_price_max === \"M\") {\n            data.price_max = parseInt(data.price_max.slice(1)) * 1000000;\n          }\n        } // console.log(data.price_max);\n        // console.log(data.price_min);\n\n\n        if (data.price_max || data.price_min) {\n          array = array.filter(obj => checkRange(data.price_min, data.price_max, obj, \"price\"));\n        }\n      } else if (data.bed_min || data.bed_max) {\n        array = array.filter(obj => checkRange(data.bed_min, data.bed_max, obj, \"number_of_beds\"));\n      }\n\n      this.setState({\n        apartments: array\n      });\n    };\n\n    this.state = {\n      apartments: apartments\n    };\n  }\n\n  render() {\n    const apartments = this.state.apartments;\n\n    const buildSquareDetails = () => {\n      return apartments.map((item, i) => {\n        return React.createElement(Card, Object.assign({}, item, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }));\n      });\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Filters, {\n      updateGalleryItems: this.updateGalleryItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, buildSquareDetails()));\n  }\n\n}\n\nexport default Gallery;","map":{"version":3,"sources":["/Users/kristina/Desktop/experis/week_9/img_page/src/components/gallery_boxs/gallery.jsx"],"names":["React","Card","Filters","apartments","cities","Gallery","Component","constructor","props","updateGalleryItems","data","array","checkRange","min","max","value","label","console","log","number_of_beds","undefined","Infinity","city","filter","apartment","find","id","cityId","city_name","includes","price_min","price_max","multiplication_price_min","slice","parseInt","multiplication_price_max","obj","bed_min","bed_max","setState","state","render","buildSquareDetails","map","item","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,UAAR,QAAyB,8BAAzB;AACA,SAAQC,MAAR,QAAqB,0BAArB;;AAEA,MAAMC,OAAN,SAAsBL,KAAK,CAACM,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,kBAPmB,GAOGC,IAAD,IAAU;AAE3B,UAAIC,KAAK,GAAGR,UAAZ;;AAEC,YAAMS,UAAU,GAAG,CAAEC,GAAF,EAAOC,GAAP,EAAYC,KAAZ,EAAmBC,KAAnB,KAA6B;AAC7C;AAECC,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,cAAlB;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,KAAD,CAAjB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AAEDD,QAAAA,GAAG,GAAIA,GAAG,KAAKO,SAAR,IAAqBP,GAAG,KAAK,EAA9B,GAAqC,CAArC,GAAyCA,GAA/C;AACAC,QAAAA,GAAG,GAAIA,GAAG,KAAKM,SAAR,IAAqBN,GAAG,KAAK,EAA9B,GAAqCO,QAArC,GAAgDP,GAAtD;AAGC,eAAQC,KAAK,CAACC,KAAD,CAAL,IAAgBH,GAAhB,IAAuBE,KAAK,CAACC,KAAD,CAAL,IAAgBF,GAA/C;AAEJ,OAdA;;AAgBD,UAAIJ,IAAI,CAACY,IAAT,EAAe;AACXX,QAAAA,KAAK,GAAGR,UAAU,CAACoB,MAAX,CAAkB,UAAUC,SAAV,EAAqB;AAC3C,gBAAMF,IAAI,GAAGlB,MAAM,CAACqB,IAAP,CAAYH,IAAI,IAAIA,IAAI,CAACI,EAAL,KAAYF,SAAS,CAACG,MAA1C,CAAb;AACA,gBAAMC,SAAS,GAAGN,IAAI,CAACN,KAAvB;;AACA,cAAIY,SAAS,CAACC,QAAV,CAAmBnB,IAAI,CAACY,IAAxB,CAAJ,EAAmC;AAC/B,mBAAOX,KAAP;AACH;AACJ,SANO,CAAR;AAOH,OARD,MAQO,IAAID,IAAI,CAACoB,SAAL,IAAkBpB,IAAI,CAACqB,SAA3B,EAAsC;AACzC,YAAIrB,IAAI,CAACoB,SAAL,IAAkB,OAAOpB,IAAI,CAACoB,SAAZ,IAAyB,QAA/C,EAAyD;AACrD,cAAIE,wBAAwB,GAAGtB,IAAI,CAACoB,SAAL,CAAeG,KAAf,CAAqB,CAAC,CAAtB,CAA/B;;AAEA,cAAID,wBAAwB,KAAK,GAAjC,EAAsC;AAClCtB,YAAAA,IAAI,CAACoB,SAAL,GAAiBI,QAAQ,CAACxB,IAAI,CAACoB,SAAL,CAAeG,KAAf,CAAqB,CAArB,CAAD,CAAR,GAAoC,IAArD;AACH,WAFD,MAEO,IAAID,wBAAwB,KAAK,GAAjC,EAAsC;AACzCtB,YAAAA,IAAI,CAACoB,SAAL,GAAiBI,QAAQ,CAACxB,IAAI,CAACoB,SAAL,CAAeG,KAAf,CAAqB,CAArB,CAAD,CAAR,GAAoC,OAArD;AACH;AACJ;;AAED,YAAIvB,IAAI,CAACqB,SAAL,IAAkB,OAAOrB,IAAI,CAACqB,SAAZ,KAA0B,QAAhD,EAA0D;AACtD,cAAII,wBAAwB,GAAGzB,IAAI,CAACqB,SAAL,CAAeE,KAAf,CAAqB,CAAC,CAAtB,CAA/B;;AAEA,cAAIE,wBAAwB,KAAK,GAAjC,EAAsC;AAClCzB,YAAAA,IAAI,CAACqB,SAAL,GAAiBG,QAAQ,CAACxB,IAAI,CAACqB,SAAL,CAAeE,KAAf,CAAqB,CAArB,CAAD,CAAR,GAAoC,IAArD;AACH,WAFD,MAEO,IAAIE,wBAAwB,KAAK,GAAjC,EAAsC;AACzCzB,YAAAA,IAAI,CAACqB,SAAL,GAAiBG,QAAQ,CAACxB,IAAI,CAACqB,SAAL,CAAeE,KAAf,CAAqB,CAArB,CAAD,CAAR,GAAoC,OAArD;AACH;AACJ,SAnBwC,CAqBzC;AACA;;;AAEA,YAAKvB,IAAI,CAACqB,SAAL,IAAkBrB,IAAI,CAACoB,SAA5B,EAAsC;AAClCnB,UAAAA,KAAK,GAAGA,KAAK,CAACY,MAAN,CAAca,GAAG,IAAIxB,UAAU,CAACF,IAAI,CAACoB,SAAN,EAAiBpB,IAAI,CAACqB,SAAtB,EAAgCK,GAAhC,EAAqC,OAArC,CAA/B,CAAR;AACH;AACJ,OA3BM,MA2BA,IAAI1B,IAAI,CAAC2B,OAAL,IAAgB3B,IAAI,CAAC4B,OAAzB,EAAkC;AACjC3B,QAAAA,KAAK,GAAGA,KAAK,CAACY,MAAN,CAAca,GAAG,IAAIxB,UAAU,CAACF,IAAI,CAAC2B,OAAN,EAAe3B,IAAI,CAAC4B,OAApB,EAA4BF,GAA5B,EAAiC,gBAAjC,CAA/B,CAAR;AACP;;AAED,WAAKG,QAAL,CAAc;AACVpC,QAAAA,UAAU,EAAEQ;AADF,OAAd;AAIH,KAtEkB;;AAEf,SAAK6B,KAAL,GAAa;AACTrC,MAAAA,UAAU,EAAEA;AADH,KAAb;AAGH;;AAmEDsC,EAAAA,MAAM,GAAG;AAAA,UAEEtC,UAFF,GAEgB,KAAKqC,KAFrB,CAEErC,UAFF;;AAIL,UAAMuC,kBAAkB,GAAG,MAAM;AAC7B,aAAOvC,UAAU,CAACwC,GAAX,CAAe,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC/B,eACI,oBAAC,IAAD,oBAAUD,IAAV;AAAgB,UAAA,GAAG,EAAEC,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAGH,OAJM,CAAP;AAKH,KAND;;AAQA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,kBAAkB,EAAE,KAAKpC,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAKI;AAAK,MAAA,SAAS,EAAE,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKiC,kBAAkB,EADvB,CALJ,CADJ;AAWH;;AAhGiC;;AAoGtC,eAAerC,OAAf","sourcesContent":["import React from 'react';\nimport Card from \"./card.jsx\";\nimport Filters from \"./filters\";\nimport {apartments} from \"../app_data/apartments_array\";\nimport {cities} from \"../app_data/cities_array\";\n\nclass Gallery extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apartments: apartments,\n        }\n    }\n\n    updateGalleryItems = (data) => {\n\n        let array = apartments;\n\n         const checkRange = ( min, max, value, label) => {\n            // console.log('min',data.price_min , \"    max \", data.price_max);\n\n             console.log(value.number_of_beds);\n             console.log(value[label]);\n             console.log(min);\n             console.log(max);\n\n            min = (min === undefined || min === \"\") ?  0 : min;\n            max = (max === undefined || max === \"\") ?  Infinity : max;\n\n\n             return (value[label] >= min && value[label] <= max);\n\n        };\n\n        if (data.city) {\n            array = apartments.filter(function (apartment) {\n                const city = cities.find(city => city.id === apartment.cityId);\n                const city_name = city.label;\n                if (city_name.includes(data.city)) {\n                    return array;\n                }\n            });\n        } else if (data.price_min || data.price_max) {\n            if (data.price_min && typeof data.price_min != \"number\") {\n                let multiplication_price_min = data.price_min.slice(-1);\n\n                if (multiplication_price_min === \"k\") {\n                    data.price_min = parseInt(data.price_min.slice(1)) * 1000;\n                } else if (multiplication_price_min === \"M\") {\n                    data.price_min = parseInt(data.price_min.slice(1)) * 1000000;\n                }\n            }\n\n            if (data.price_max && typeof data.price_max !== \"number\") {\n                let multiplication_price_max = data.price_max.slice(-1);\n\n                if (multiplication_price_max === \"k\") {\n                    data.price_max = parseInt(data.price_max.slice(1)) * 1000;\n                } else if (multiplication_price_max === \"M\") {\n                    data.price_max = parseInt(data.price_max.slice(1)) * 1000000;\n                }\n            }\n\n            // console.log(data.price_max);\n            // console.log(data.price_min);\n\n            if  (data.price_max || data.price_min){\n                array = array.filter (obj => checkRange(data.price_min, data.price_max,obj, \"price\"));\n            }\n        } else if (data.bed_min || data.bed_max) {\n                array = array.filter (obj => checkRange(data.bed_min, data.bed_max,obj, \"number_of_beds\"));\n        }\n\n        this.setState({\n            apartments: array\n        });\n\n    };\n\n    render() {\n\n        const {apartments} = this.state;\n\n        const buildSquareDetails = () => {\n            return apartments.map((item, i) => {\n                return (\n                    <Card {...item} key={i}/>\n                )\n            })\n        };\n\n        return (\n            <div>\n                <div>\n                    <Filters updateGalleryItems={this.updateGalleryItems}/>\n                </div>\n\n                <div className={\"row\"}>\n                    {buildSquareDetails()}\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}