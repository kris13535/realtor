{"ast":null,"code":"var _jsxFileName = \"/Users/kristina/Desktop/experis/week_9/img_page/src/components/search_page/gallery.jsx\";\nimport React from 'react';\nimport Card from \"./card.jsx\";\nimport Filters from \"./filters\";\n\nclass Gallery extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.checkRange = (value, min, max, label) => {\n      let cur_val = value[label];\n\n      if (label === 'price') {\n        cur_val = value[label] * 100000;\n      }\n\n      min = min === undefined || min === \"\" ? 0 : min;\n      max = max === undefined || max === \"\" ? Infinity : max;\n      return cur_val >= min && cur_val <= max;\n    };\n\n    this.data_price_multiplication = price => {\n      if (price && typeof price !== \"number\") {\n        let multiplication_price_max = price.slice(-1);\n\n        if (multiplication_price_max === \"k\") {\n          price = parseInt(price.slice(1)) * 1000;\n        } else if (multiplication_price_max === \"M\") {\n          price = parseInt(price.slice(1)) * 1000000;\n        }\n      }\n\n      return price;\n    };\n\n    this.updateGalleryItems = data => {\n      const _this$state = this.state,\n            filtered = _this$state.filtered,\n            cities = _this$state.cities,\n            apartments = _this$state.apartments; // if (data.city) {\n      //     this.setState({\n      //     filtered : filtered.map(function (apartment) {\n      //         const city = cities.find(city => city.id === apartment.cityId);\n      //         const city_name = city.label;\n      //         apartment.active = city_name.toLowerCase().includes(data.city.toLowerCase());\n      //         })\n      //     });\n      //     console.log(this.state.filtered);\n      // }\n\n      if (data.city) {\n        filtered.map(function (apartment) {\n          const city = cities.find(city => city.id === apartment.cityId);\n          const city_name = city.label;\n          apartment.activeApp = city_name.toLowerCase().includes(data.city.toLowerCase());\n        });\n        console.log(filtered);\n      }\n\n      if (data.price_min || data.price_max) {\n        data.price_min = this.data_price_multiplication(data.price_min);\n        data.price_max = this.data_price_multiplication(data.price_max);\n\n        if (data.price_max || data.price_min) {\n          this.setState({\n            filtered: filtered.filter(obj => this.checkRange(obj, data.price_min, data.price_max, \"price\"))\n          });\n        }\n      }\n\n      if (data.bed_min || data.bed_max) {\n        this.setState({\n          filtered: filtered.filter(obj => this.checkRange(obj, data.bed_min, data.bed_max, \"number_of_beds\"))\n        });\n      }\n\n      if (data.room_min || data.room_max) {\n        this.setState({\n          filtered: filtered.filter(obj => this.checkRange(obj, data.room_min, data.room_max, \"number_of_rooms\"))\n        });\n      }\n\n      if (data.no_filters) {\n        this.setState({\n          filtered: apartments\n        });\n      }\n    };\n\n    this.filtered_len_0 = () => {\n      const _this$state2 = this.state,\n            filtered = _this$state2.filtered,\n            apartments = _this$state2.apartments;\n\n      if (filtered.length === 0) {\n        alert(\"There are no apartments that match your search \\n (The apartments will appear without the filters)\");\n        this.setState({\n          filtered: apartments\n        });\n      }\n    };\n\n    this.state = {\n      apartments: this.props.apartments,\n      filtered: this.props.apartments,\n      cities: this.props.cities\n    };\n  }\n\n  componentDidMount() {\n    this.state.filtered.map(function (apartment) {\n      apartment.activeApp = true;\n    });\n  }\n\n  render() {\n    this.filtered_len_0();\n    const _this$state3 = this.state,\n          cities = _this$state3.cities,\n          filtered = _this$state3.filtered;\n    console.log(this.state.filtered);\n\n    const buildSquareDetails = () => {\n      return filtered.map((item, i) => {\n        console.log(item.cityId);\n        return item['activeApp'] ? React.createElement(Card, Object.assign({}, item, {\n          cities: cities,\n          type: this.props.type,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        })) : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, \"asdasdasdasd\");\n      });\n    };\n\n    return React.createElement(\"div\", {\n      style: {\n        overflow: \"hidden\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Filters, {\n      updateGalleryItems: this.updateGalleryItems,\n      filtered: this.state.filtered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row m-0 d-flex justify-content-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, buildSquareDetails()));\n  }\n\n}\n\nexport default Gallery;","map":{"version":3,"sources":["/Users/kristina/Desktop/experis/week_9/img_page/src/components/search_page/gallery.jsx"],"names":["React","Card","Filters","Gallery","Component","constructor","props","checkRange","value","min","max","label","cur_val","undefined","Infinity","data_price_multiplication","price","multiplication_price_max","slice","parseInt","updateGalleryItems","data","state","filtered","cities","apartments","city","map","apartment","find","id","cityId","city_name","activeApp","toLowerCase","includes","console","log","price_min","price_max","setState","filter","obj","bed_min","bed_max","room_min","room_max","no_filters","filtered_len_0","length","alert","componentDidMount","render","buildSquareDetails","item","i","type","overflow"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Card from \"./card.jsx\";\nimport Filters from \"./filters\";\n\nclass Gallery extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apartments: this.props.apartments,\n            filtered: this.props.apartments,\n            cities: this.props.cities\n        }\n    };\n\n    checkRange = ( value, min, max, label) => {\n        let cur_val = value[label];\n        if (label === 'price') {\n            cur_val = value[label]*100000;\n        }\n        min = (min === undefined || min === \"\") ?  0 : min;\n        max = (max === undefined || max === \"\") ?  Infinity : max;\n\n        return (cur_val >= min && cur_val <= max);\n    };\n\n    data_price_multiplication = (price) => {\n        if (price && typeof price !== \"number\") {\n            let multiplication_price_max = price.slice(-1);\n\n            if (multiplication_price_max === \"k\") {\n                price = parseInt(price.slice(1)) * 1000;\n            } else if (multiplication_price_max === \"M\") {\n                price = parseInt(price.slice(1)) * 1000000;\n            }\n        }\n        return price;\n    };\n    componentDidMount() {\n        this.state.filtered.map(function (apartment) {apartment.activeApp = true\n        });\n    }\n\n    updateGalleryItems  = (data) => {\n        const {filtered, cities, apartments} = this.state;\n\n        // if (data.city) {\n        //     this.setState({\n        //     filtered : filtered.map(function (apartment) {\n        //         const city = cities.find(city => city.id === apartment.cityId);\n        //         const city_name = city.label;\n        //         apartment.active = city_name.toLowerCase().includes(data.city.toLowerCase());\n        //         })\n        //     });\n        //     console.log(this.state.filtered);\n        // }\n        if (data.city) {\n             filtered.map(function (apartment) {\n                const city = cities.find(city => city.id === apartment.cityId);\n                const city_name = city.label;\n                apartment.activeApp= city_name.toLowerCase().includes(data.city.toLowerCase());\n            });\n\n            console.log(filtered);\n        }\n\n        if (data.price_min || data.price_max) {\n            data.price_min = this.data_price_multiplication(data.price_min);\n            data.price_max = this.data_price_multiplication(data.price_max);\n\n            if (data.price_max || data.price_min) {\n                this.setState({\n                    filtered : filtered.filter(obj => this.checkRange(obj, data.price_min , data.price_max , \"price\"))\n                });\n            }\n        }\n        if (data.bed_min || data.bed_max) {\n                this.setState({\n                    filtered : filtered.filter (obj => this.checkRange(obj, data.bed_min, data.bed_max, \"number_of_beds\"))\n                });\n        }\n        if (data.room_min || data.room_max) {\n            this.setState({\n                    filtered : filtered.filter(obj => this.checkRange(obj, data.room_min, data.room_max, \"number_of_rooms\"))\n            });\n        }\n        if (data.no_filters){\n            this.setState({\n                filtered : apartments,\n            });\n        }\n    };\n\n    filtered_len_0 = () => {\n        const {filtered, apartments } = this.state;\n        if (filtered.length === 0){\n            alert(\"There are no apartments that match your search \\n (The apartments will appear without the filters)\");\n            this.setState({\n                filtered : apartments,\n            });\n        }\n    };\n\n\n    render() {\n        this.filtered_len_0();\n        const { cities, filtered } = this.state;\n        console.log(this.state.filtered);\n        const buildSquareDetails = () => {\n            return filtered.map((item, i) => {\n                console.log(item.cityId);\n                return item['activeApp'] ?\n                    <Card {...item} cities={cities} type={this.props.type} key={i}/>\n                    : <div>asdasdasdasd</div>\n\n            })\n        };\n\n        return (\n            <div style={{overflow:\"hidden\"}}>\n                <div>\n                    <Filters updateGalleryItems={this.updateGalleryItems} filtered={this.state.filtered}/>\n                </div>\n\n                <div className={\"row m-0 d-flex justify-content-around\"}>\n                    {buildSquareDetails()}\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}