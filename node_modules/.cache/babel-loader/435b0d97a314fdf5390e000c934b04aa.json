{"ast":null,"code":"var _jsxFileName = \"/Users/kristina/Desktop/experis/week_9/img_page/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport SearchPage from \"./components/search_page/search_page\";\nimport HomePage from \"./components/home_page/home_page\";\nimport SingleApartment from \"./components/single_apartment_page/single_apartment\";\nimport Header from \"./components/header_top/header\";\nimport { getDataFromServer } from \"./components/app_data/server_data\";\nimport CitiesPage from \"./components/cities_page/cities_page\";\nimport Loading from \"./components/loading/loading\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSuccess = data => {\n      this.setState({\n        apartments: data.apartments,\n        cities: data.cities,\n        loading: false\n      });\n    };\n\n    this.state = {\n      apartments: [],\n      cities: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    getDataFromServer('data-rt.json', this.handleSuccess);\n  }\n\n  render() {\n    const _this$state = this.state,\n          apartments = _this$state.apartments,\n          cities = _this$state.cities,\n          loading = _this$state.loading;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), loading ? React.createElement(Loading, {\n      type: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }) : React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/searchPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(SearchPage, {\n      apartments: apartments,\n      cities: cities,\n      type: \"apartments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/citiesPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(CitiesPage, {\n      cities: cities,\n      type: \"cities\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/singleApartment/:id\",\n      component: props => React.createElement(SingleApartment, {\n        apartments: apartments,\n        aptId: props.match.params.id,\n        cities: cities,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(HomePage, {\n      apartments: apartments,\n      cities: cities,\n      type: \"apartments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kristina/Desktop/experis/week_9/img_page/src/App.js"],"names":["React","BrowserRouter","Router","Switch","Route","SearchPage","HomePage","SingleApartment","Header","getDataFromServer","CitiesPage","Loading","App","Component","constructor","props","handleSuccess","data","setState","apartments","cities","loading","state","componentDidMount","render","match","params","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n\n} from \"react-router-dom\";\nimport SearchPage from \"./components/search_page/search_page\";\nimport HomePage from \"./components/home_page/home_page\";\nimport SingleApartment from \"./components/single_apartment_page/single_apartment\";\nimport Header from \"./components/header_top/header\";\nimport {getDataFromServer} from \"./components/app_data/server_data\";\nimport CitiesPage from \"./components/cities_page/cities_page\";\nimport Loading from \"./components/loading/loading\";\n\n\nclass App extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            apartments: [],\n            cities: [],\n            loading: true,\n        };\n    };\n\n    componentDidMount() {\n        getDataFromServer('data-rt.json',this.handleSuccess);\n    };\n\n    handleSuccess = (data) => {\n        this.setState({\n            apartments: data.apartments,\n            cities: data.cities,\n            loading: false,\n        })\n    };\n    render() {\n        const {apartments, cities, loading} = this.state;\n        return(\n            <div>\n\n                <Router>\n                    <Header/>\n                    {loading ? <Loading type={\"loading\"}/> :\n                        <Switch>\n\n                            <Route path=\"/searchPage\">\n                                <SearchPage apartments={apartments} cities={cities} type={\"apartments\"}/>\n                            </Route>\n\n                            <Route path={\"/citiesPage\"}>\n                                <CitiesPage cities={cities} type={\"cities\"}/>\n                            </Route>\n\n                            <Route path={\"/singleApartment/:id\"}\n                                   component={(props) => <SingleApartment apartments={apartments}\n                                                                          aptId={props.match.params.id}\n                                                                          cities={cities}/>}/>\n\n                            <Route path=\"/\">\n                                <HomePage apartments={apartments} cities={cities} type={\"apartments\"}/>\n                            </Route>\n\n                        </Switch>\n                    }\n                </Router>\n            </div>\n        )\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}