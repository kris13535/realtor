{"ast":null,"code":"var _jsxFileName = \"/Users/kristina/Desktop/experis/week_9/img_page/src/components/search_page/gallery.jsx\";\nimport React from 'react';\nimport Card from \"./card.jsx\";\nimport Filters from \"./filters\";\nimport { apartments } from \"../app_data/apartments_array\";\nimport { cities } from \"../app_data/cities_array\";\n\nclass Gallery extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateGalleryItems = data => {\n      let array = apartments;\n\n      const checkRange = (value, min, max, label) => {\n        min = min === undefined || min === \"\" ? 0 : min;\n        max = max === undefined || max === \"\" ? Infinity : max;\n        return value[label] >= min && value[label] <= max;\n      };\n\n      if (data.city) {\n        array = apartments.filter(function (apartment) {\n          const city = cities.find(city => city.id === apartment.cityId);\n          const city_name = city.label;\n\n          if (city_name.toLowerCase().includes(data.city.toLowerCase())) {\n            return array;\n          }\n        });\n      } else if (data.price_min || data.price_max) {\n        if (data.price_min && typeof data.price_min != \"number\") {\n          let multiplication_price_min = data.price_min.slice(-1);\n\n          if (multiplication_price_min === \"k\") {\n            data.price_min = parseInt(data.price_min.slice(1)) * 1000;\n          } else if (multiplication_price_min === \"M\") {\n            data.price_min = parseInt(data.price_min.slice(1)) * 1000000;\n          }\n        }\n\n        if (data.price_max && typeof data.price_max !== \"number\") {\n          let multiplication_price_max = data.price_max.slice(-1);\n\n          if (multiplication_price_max === \"k\") {\n            data.price_max = parseInt(data.price_max.slice(1)) * 1000;\n          } else if (multiplication_price_max === \"M\") {\n            data.price_max = parseInt(data.price_max.slice(1)) * 1000000;\n          }\n        }\n\n        if (data.price_max || data.price_min) {\n          array = array.filter(obj => checkRange(obj, data.price_min, data.price_max, \"price\"));\n        }\n      } else if (data.bed_min || data.bed_max) {\n        array = array.filter(obj => checkRange(obj, data.bed_min, data.bed_max, \"number_of_beds\"));\n      } else if (data.room_min || data.room_max) {\n        array = array.filter(obj => checkRange(obj, data.room_min, data.room_max, \"number_of_rooms\"));\n      }\n\n      this.setState({\n        apartments: array\n      });\n    };\n\n    this.state = {\n      apartmentss: this.props.apartments\n    };\n  }\n\n  render() {\n    const apartmentss = this.state.apartmentss;\n    console.log(this.props);\n\n    const buildSquareDetails = () => {\n      return this.props.apartments.map((item, i) => {\n        return React.createElement(Card, Object.assign({}, item, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }));\n      });\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Filters, {\n      updateGalleryItems: this.updateGalleryItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.props.loading ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"loading\") : buildSquareDetails()));\n  }\n\n}\n\nexport default Gallery;","map":{"version":3,"sources":["/Users/kristina/Desktop/experis/week_9/img_page/src/components/search_page/gallery.jsx"],"names":["React","Card","Filters","apartments","cities","Gallery","Component","constructor","props","updateGalleryItems","data","array","checkRange","value","min","max","label","undefined","Infinity","city","filter","apartment","find","id","cityId","city_name","toLowerCase","includes","price_min","price_max","multiplication_price_min","slice","parseInt","multiplication_price_max","obj","bed_min","bed_max","room_min","room_max","setState","state","apartmentss","render","console","log","buildSquareDetails","map","item","i","loading"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Card from \"./card.jsx\";\nimport Filters from \"./filters\";\nimport {apartments} from \"../app_data/apartments_array\";\nimport {cities} from \"../app_data/cities_array\";\n\nclass Gallery extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apartmentss: this.props.apartments,\n\n        }\n    };\n\n\n\n\n    updateGalleryItems = (data) => {\n\n        let array = apartments;\n\n         const checkRange = ( value, min, max, label) => {\n\n            min = (min === undefined || min === \"\") ?  0 : min;\n            max = (max === undefined || max === \"\") ?  Infinity : max;\n\n            return (value[label] >= min && value[label] <= max);\n        };\n\n\n        if (data.city) {\n            array = apartments.filter(function (apartment) {\n                const city = cities.find(city => city.id === apartment.cityId);\n                const city_name = city.label;\n                if (city_name.toLowerCase().includes(data.city.toLowerCase())) {\n                    return array;\n                }\n            });\n\n        } else if (data.price_min || data.price_max) {\n            if (data.price_min && typeof data.price_min != \"number\") {\n                let multiplication_price_min = data.price_min.slice(-1);\n\n                if (multiplication_price_min === \"k\") {\n                    data.price_min = parseInt(data.price_min.slice(1)) * 1000;\n                } else if (multiplication_price_min === \"M\") {\n                    data.price_min = parseInt(data.price_min.slice(1)) * 1000000;\n                }\n            }\n\n            if (data.price_max && typeof data.price_max !== \"number\") {\n                let multiplication_price_max = data.price_max.slice(-1);\n\n                if (multiplication_price_max === \"k\") {\n                    data.price_max = parseInt(data.price_max.slice(1)) * 1000;\n                } else if (multiplication_price_max === \"M\") {\n                    data.price_max = parseInt(data.price_max.slice(1)) * 1000000;\n                }\n            }\n\n            if  (data.price_max || data.price_min){\n                array = array.filter (obj => checkRange(obj, data.price_min, data.price_max, \"price\"));\n            }\n        }else if (data.bed_min || data.bed_max) {\n                array = array.filter (obj => checkRange(obj, data.bed_min, data.bed_max, \"number_of_beds\"));\n        }else if (data.room_min || data.room_max) {\n            array = array.filter(obj => checkRange(obj, data.room_min, data.room_max, \"number_of_rooms\"));\n        }\n\n        this.setState({\n            apartments: array\n        });\n\n    };\n\n    render() {\n\n        const {apartmentss} = this.state;\n        console.log(this.props);\n        const buildSquareDetails = () => {\n            return this.props.apartments.map((item, i) => {\n                return (\n                    <Card {...item} key={i}/>\n                )\n            })\n        };\n\n        return (\n            <div>\n                <div>\n                    <Filters updateGalleryItems={this.updateGalleryItems}/>\n                </div>\n\n                <div className={\"row\"}>\n                    {this.props.loading ? <p>loading</p> : buildSquareDetails()}\n\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}