{"ast":null,"code":"var _jsxFileName = \"/Users/kristina/Desktop/experis/week_9/img_page/src/components/search_page/gallery.jsx\";\nimport React from 'react';\nimport Card from \"./card.jsx\";\nimport Filters from \"./filters\";\n\nclass Gallery extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateGalleryItems = data => {\n      const _this$state = this.state,\n            filtered = _this$state.filtered,\n            cities = _this$state.cities,\n            apartments = _this$state.apartments;\n\n      const checkRange = (value, min, max, label) => {\n        min = min === undefined || min === \"\" ? 0 : min;\n        max = max === undefined || max === \"\" ? Infinity : max;\n        return value[label] >= min && value[label] <= max;\n      };\n\n      if (data.city) {\n        this.setState({\n          filtered: filtered.filter(function (apartment) {\n            const city = cities.find(city => city.id === apartment.cityId);\n            const city_name = city.label;\n\n            if (city_name.toLowerCase().includes(data.city.toLowerCase())) {\n              return filtered;\n            }\n          })\n        });\n      } else if (data.price_min || data.price_max) {\n        if (data.price_min && typeof data.price_min != \"number\") {\n          let multiplication_price_min = data.price_min.slice(-1);\n\n          if (multiplication_price_min === \"k\") {\n            data.price_min = parseInt(data.price_min.slice(1)) * 1000;\n          } else if (multiplication_price_min === \"M\") {\n            data.price_min = parseInt(data.price_min.slice(1)) * 1000000;\n          }\n        }\n\n        if (data.price_max && typeof data.price_max !== \"number\") {\n          let multiplication_price_max = data.price_max.slice(-1);\n\n          if (multiplication_price_max === \"k\") {\n            data.price_max = parseInt(data.price_max.slice(1)) * 1000;\n          } else if (multiplication_price_max === \"M\") {\n            data.price_max = parseInt(data.price_max.slice(1)) * 1000000;\n          }\n        }\n\n        if (data.price_max || data.price_min) {\n          this.setState({\n            filtered: filtered.filter(obj => checkRange(obj, data.price_min, data.price_max, \"price\"))\n          });\n        }\n\n        if (data.bed_min || data.bed_max) {\n          this.setState({\n            filtered: filtered.filter(obj => checkRange(obj, data.bed_min, data.bed_max, \"number_of_beds\"))\n          });\n        }\n\n        if (data.room_min || data.room_max) {\n          this.setState({\n            filtered: filtered.filter(obj => checkRange(obj, data.room_min, data.room_max, \"number_of_rooms\"))\n          });\n        }\n      }\n    };\n\n    this.state = {\n      apartments: this.props.apartments,\n      filtered: this.props.apartments,\n      cities: this.props.cities\n    };\n  }\n\n  // updateGalleryItems = (data) => {\n  //\n  //     const {cities, apartments} = this.state;\n  //     let array = apartments;\n  //\n  //      const checkRange = ( value, min, max, label) => {\n  //\n  //         min = (min === undefined || min === \"\") ?  0 : min;\n  //         max = (max === undefined || max === \"\") ?  Infinity : max;\n  //\n  //         return (value[label] >= min && value[label] <= max);\n  //     };\n  //\n  //\n  //     if (data.city) {\n  //         array = array.filter(function (apartment) {\n  //             const city = cities.find(city => city.id === apartment.cityId);\n  //             const city_name = city.label;\n  //             if (city_name.toLowerCase().includes(data.city.toLowerCase())) {\n  //                 return array;\n  //             }\n  //         });\n  //     }\n  // } else if (data.price_min || data.price_max) {\n  //     if (data.price_min && typeof data.price_min != \"number\") {\n  //         let multiplication_price_min = data.price_min.slice(-1);\n  //\n  //         if (multiplication_price_min === \"k\") {\n  //             data.price_min = parseInt(data.price_min.slice(1)) * 1000;\n  //         } else if (multiplication_price_min === \"M\") {\n  //             data.price_min = parseInt(data.price_min.slice(1)) * 1000000;\n  //         }\n  //     }\n  //\n  //     if (data.price_max && typeof data.price_max !== \"number\") {\n  //         let multiplication_price_max = data.price_max.slice(-1);\n  //\n  //         if (multiplication_price_max === \"k\") {\n  //             data.price_max = parseInt(data.price_max.slice(1)) * 1000;\n  //         } else if (multiplication_price_max === \"M\") {\n  //             data.price_max = parseInt(data.price_max.slice(1)) * 1000000;\n  //         }\n  //     }\n  //\n  //     if  (data.price_max || data.price_min){\n  //         array = array.filter (obj => checkRange(obj, data.price_min, data.price_max, \"price\"));\n  //     }\n  // }else if (data.bed_min || data.bed_max) {\n  //         array = array.filter (obj => checkRange(obj, data.bed_min, data.bed_max, \"number_of_beds\"));\n  // }else if (data.room_min || data.room_max) {\n  //     array = array.filter(obj => checkRange(obj, data.room_min, data.room_max, \"number_of_rooms\"));\n  // }\n  //     this.setState({\n  //         apartments: array,\n  //     });\n  //\n  // };\n  render() {\n    const _this$state2 = this.state,\n          cities = _this$state2.cities,\n          filtered = _this$state2.filtered;\n\n    const buildSquareDetails = () => {\n      return filtered.map((item, i) => {\n        return React.createElement(Card, Object.assign({}, item, {\n          cities: cities,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }));\n      });\n    };\n\n    return React.createElement(\"div\", {\n      style: {\n        overflow: \"hidden\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Filters, {\n      updateGalleryItems: this.updateGalleryItems,\n      filtered: this.state.filtered,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row m-0 d-flex justify-content-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, buildSquareDetails()));\n  }\n\n}\n\nexport default Gallery;","map":{"version":3,"sources":["/Users/kristina/Desktop/experis/week_9/img_page/src/components/search_page/gallery.jsx"],"names":["React","Card","Filters","Gallery","Component","constructor","props","updateGalleryItems","data","state","filtered","cities","apartments","checkRange","value","min","max","label","undefined","Infinity","city","setState","filter","apartment","find","id","cityId","city_name","toLowerCase","includes","price_min","price_max","multiplication_price_min","slice","parseInt","multiplication_price_max","obj","bed_min","bed_max","room_min","room_max","render","buildSquareDetails","map","item","i","overflow"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBC,kBAXmB,GAWIC,IAAD,IAAU;AAAA,0BACW,KAAKC,KADhB;AAAA,YACrBC,QADqB,eACrBA,QADqB;AAAA,YACXC,MADW,eACXA,MADW;AAAA,YACHC,UADG,eACHA,UADG;;AAG5B,YAAMC,UAAU,GAAG,CAAEC,KAAF,EAASC,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,KAA6B;AAE5CF,QAAAA,GAAG,GAAIA,GAAG,KAAKG,SAAR,IAAqBH,GAAG,KAAK,EAA9B,GAAqC,CAArC,GAAyCA,GAA/C;AACAC,QAAAA,GAAG,GAAIA,GAAG,KAAKE,SAAR,IAAqBF,GAAG,KAAK,EAA9B,GAAqCG,QAArC,GAAgDH,GAAtD;AAEA,eAAQF,KAAK,CAACG,KAAD,CAAL,IAAgBF,GAAhB,IAAuBD,KAAK,CAACG,KAAD,CAAL,IAAgBD,GAA/C;AACH,OAND;;AASA,UAAIR,IAAI,CAACY,IAAT,EAAe;AACX,aAAKC,QAAL,CAAc;AACdX,UAAAA,QAAQ,EAAGA,QAAQ,CAACY,MAAT,CAAgB,UAAUC,SAAV,EAAqB;AAC5C,kBAAMH,IAAI,GAAGT,MAAM,CAACa,IAAP,CAAYJ,IAAI,IAAIA,IAAI,CAACK,EAAL,KAAYF,SAAS,CAACG,MAA1C,CAAb;AACA,kBAAMC,SAAS,GAAGP,IAAI,CAACH,KAAvB;;AACA,gBAAIU,SAAS,CAACC,WAAV,GAAwBC,QAAxB,CAAiCrB,IAAI,CAACY,IAAL,CAAUQ,WAAV,EAAjC,CAAJ,EAA8D;AAAE,qBAAOlB,QAAP;AAAgB;AAC/E,WAJM;AADG,SAAd;AAOH,OARD,MASK,IAAIF,IAAI,CAACsB,SAAL,IAAkBtB,IAAI,CAACuB,SAA3B,EAAsC;AACvC,YAAIvB,IAAI,CAACsB,SAAL,IAAkB,OAAOtB,IAAI,CAACsB,SAAZ,IAAyB,QAA/C,EAAyD;AACrD,cAAIE,wBAAwB,GAAGxB,IAAI,CAACsB,SAAL,CAAeG,KAAf,CAAqB,CAAC,CAAtB,CAA/B;;AAEA,cAAID,wBAAwB,KAAK,GAAjC,EAAsC;AAClCxB,YAAAA,IAAI,CAACsB,SAAL,GAAiBI,QAAQ,CAAC1B,IAAI,CAACsB,SAAL,CAAeG,KAAf,CAAqB,CAArB,CAAD,CAAR,GAAoC,IAArD;AACH,WAFD,MAEO,IAAID,wBAAwB,KAAK,GAAjC,EAAsC;AACzCxB,YAAAA,IAAI,CAACsB,SAAL,GAAiBI,QAAQ,CAAC1B,IAAI,CAACsB,SAAL,CAAeG,KAAf,CAAqB,CAArB,CAAD,CAAR,GAAoC,OAArD;AACH;AACJ;;AAED,YAAIzB,IAAI,CAACuB,SAAL,IAAkB,OAAOvB,IAAI,CAACuB,SAAZ,KAA0B,QAAhD,EAA0D;AACtD,cAAII,wBAAwB,GAAG3B,IAAI,CAACuB,SAAL,CAAeE,KAAf,CAAqB,CAAC,CAAtB,CAA/B;;AAEA,cAAIE,wBAAwB,KAAK,GAAjC,EAAsC;AAClC3B,YAAAA,IAAI,CAACuB,SAAL,GAAiBG,QAAQ,CAAC1B,IAAI,CAACuB,SAAL,CAAeE,KAAf,CAAqB,CAArB,CAAD,CAAR,GAAoC,IAArD;AACH,WAFD,MAEO,IAAIE,wBAAwB,KAAK,GAAjC,EAAsC;AACzC3B,YAAAA,IAAI,CAACuB,SAAL,GAAiBG,QAAQ,CAAC1B,IAAI,CAACuB,SAAL,CAAeE,KAAf,CAAqB,CAArB,CAAD,CAAR,GAAoC,OAArD;AACH;AACJ;;AAED,YAAIzB,IAAI,CAACuB,SAAL,IAAkBvB,IAAI,CAACsB,SAA3B,EAAsC;AAClC,eAAKT,QAAL,CAAc;AACVX,YAAAA,QAAQ,EAAGA,QAAQ,CAACY,MAAT,CAAgBc,GAAG,IAAIvB,UAAU,CAACuB,GAAD,EAAM5B,IAAI,CAACsB,SAAX,EAAsBtB,IAAI,CAACuB,SAA3B,EAAsC,OAAtC,CAAjC;AADD,WAAd;AAEH;;AACD,YAAIvB,IAAI,CAAC6B,OAAL,IAAgB7B,IAAI,CAAC8B,OAAzB,EAAkC;AAC9B,eAAKjB,QAAL,CAAc;AACVX,YAAAA,QAAQ,EAAGA,QAAQ,CAACY,MAAT,CAAiBc,GAAG,IAAIvB,UAAU,CAACuB,GAAD,EAAM5B,IAAI,CAAC6B,OAAX,EAAoB7B,IAAI,CAAC8B,OAAzB,EAAkC,gBAAlC,CAAlC;AADD,WAAd;AAEH;;AAED,YAAI9B,IAAI,CAAC+B,QAAL,IAAiB/B,IAAI,CAACgC,QAA1B,EAAoC;AAChC,eAAKnB,QAAL,CAAc;AACVX,YAAAA,QAAQ,EAAGA,QAAQ,CAACY,MAAT,CAAgBc,GAAG,IAAIvB,UAAU,CAACuB,GAAD,EAAM5B,IAAI,CAAC+B,QAAX,EAAqB/B,IAAI,CAACgC,QAA1B,EAAoC,iBAApC,CAAjC;AADD,WAAd;AAEH;AACJ;AACJ,KAnEkB;;AAEf,SAAK/B,KAAL,GAAa;AACTG,MAAAA,UAAU,EAAE,KAAKN,KAAL,CAAWM,UADd;AAETF,MAAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWM,UAFZ;AAGTD,MAAAA,MAAM,EAAE,KAAKL,KAAL,CAAWK;AAHV,KAAb;AAMH;;AA6DD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEJ;AACA;AACA;AACA;AACA;AAEA8B,EAAAA,MAAM,GAAG;AAAA,yBAEwB,KAAKhC,KAF7B;AAAA,UAEGE,MAFH,gBAEGA,MAFH;AAAA,UAEWD,QAFX,gBAEWA,QAFX;;AAIL,UAAMgC,kBAAkB,GAAG,MAAM;AAC7B,aAAOhC,QAAQ,CAACiC,GAAT,CAAa,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC7B,eACI,oBAAC,IAAD,oBAAUD,IAAV;AAAgB,UAAA,MAAM,EAAEjC,MAAxB;AAAgC,UAAA,GAAG,EAAEkC,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAGH,OAJM,CAAP;AAKH,KAND;;AAQA,WACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAC;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,kBAAkB,EAAE,KAAKvC,kBAAlC;AAAsD,MAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWC,QAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAKI;AAAK,MAAA,SAAS,EAAE,uCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKgC,kBAAkB,EADvB,CALJ,CADJ;AAWH;;AAxJiC;;AA4JtC,eAAevC,OAAf","sourcesContent":["import React from 'react';\nimport Card from \"./card.jsx\";\nimport Filters from \"./filters\";\n\nclass Gallery extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apartments: this.props.apartments,\n            filtered: this.props.apartments,\n            cities: this.props.cities,\n        }\n\n    };\n\n\n    updateGalleryItems  = (data) => {\n        const {filtered, cities, apartments} = this.state;\n\n        const checkRange = ( value, min, max, label) => {\n\n            min = (min === undefined || min === \"\") ?  0 : min;\n            max = (max === undefined || max === \"\") ?  Infinity : max;\n\n            return (value[label] >= min && value[label] <= max);\n        };\n\n\n        if (data.city) {\n            this.setState({\n            filtered : filtered.filter(function (apartment) {\n                const city = cities.find(city => city.id === apartment.cityId);\n                const city_name = city.label;\n                if (city_name.toLowerCase().includes(data.city.toLowerCase())){ return filtered}\n                })\n            })\n        }\n        else if (data.price_min || data.price_max) {\n            if (data.price_min && typeof data.price_min != \"number\") {\n                let multiplication_price_min = data.price_min.slice(-1);\n\n                if (multiplication_price_min === \"k\") {\n                    data.price_min = parseInt(data.price_min.slice(1)) * 1000;\n                } else if (multiplication_price_min === \"M\") {\n                    data.price_min = parseInt(data.price_min.slice(1)) * 1000000;\n                }\n            }\n\n            if (data.price_max && typeof data.price_max !== \"number\") {\n                let multiplication_price_max = data.price_max.slice(-1);\n\n                if (multiplication_price_max === \"k\") {\n                    data.price_max = parseInt(data.price_max.slice(1)) * 1000;\n                } else if (multiplication_price_max === \"M\") {\n                    data.price_max = parseInt(data.price_max.slice(1)) * 1000000;\n                }\n            }\n\n            if (data.price_max || data.price_min) {\n                this.setState({\n                    filtered : filtered.filter(obj => checkRange(obj, data.price_min, data.price_max, \"price\"))});\n            }\n            if (data.bed_min || data.bed_max) {\n                this.setState({\n                    filtered : filtered.filter (obj => checkRange(obj, data.bed_min, data.bed_max, \"number_of_beds\"))});\n            }\n\n            if (data.room_min || data.room_max) {\n                this.setState({\n                    filtered : filtered.filter(obj => checkRange(obj, data.room_min, data.room_max, \"number_of_rooms\"))});\n            }\n        }\n    };\n\n    // updateGalleryItems = (data) => {\n    //\n    //     const {cities, apartments} = this.state;\n    //     let array = apartments;\n    //\n    //      const checkRange = ( value, min, max, label) => {\n    //\n    //         min = (min === undefined || min === \"\") ?  0 : min;\n    //         max = (max === undefined || max === \"\") ?  Infinity : max;\n    //\n    //         return (value[label] >= min && value[label] <= max);\n    //     };\n    //\n    //\n    //     if (data.city) {\n    //         array = array.filter(function (apartment) {\n    //             const city = cities.find(city => city.id === apartment.cityId);\n    //             const city_name = city.label;\n    //             if (city_name.toLowerCase().includes(data.city.toLowerCase())) {\n    //                 return array;\n    //             }\n    //         });\n    //     }\n        // } else if (data.price_min || data.price_max) {\n        //     if (data.price_min && typeof data.price_min != \"number\") {\n        //         let multiplication_price_min = data.price_min.slice(-1);\n        //\n        //         if (multiplication_price_min === \"k\") {\n        //             data.price_min = parseInt(data.price_min.slice(1)) * 1000;\n        //         } else if (multiplication_price_min === \"M\") {\n        //             data.price_min = parseInt(data.price_min.slice(1)) * 1000000;\n        //         }\n        //     }\n        //\n        //     if (data.price_max && typeof data.price_max !== \"number\") {\n        //         let multiplication_price_max = data.price_max.slice(-1);\n        //\n        //         if (multiplication_price_max === \"k\") {\n        //             data.price_max = parseInt(data.price_max.slice(1)) * 1000;\n        //         } else if (multiplication_price_max === \"M\") {\n        //             data.price_max = parseInt(data.price_max.slice(1)) * 1000000;\n        //         }\n        //     }\n        //\n        //     if  (data.price_max || data.price_min){\n        //         array = array.filter (obj => checkRange(obj, data.price_min, data.price_max, \"price\"));\n        //     }\n        // }else if (data.bed_min || data.bed_max) {\n        //         array = array.filter (obj => checkRange(obj, data.bed_min, data.bed_max, \"number_of_beds\"));\n        // }else if (data.room_min || data.room_max) {\n        //     array = array.filter(obj => checkRange(obj, data.room_min, data.room_max, \"number_of_rooms\"));\n        // }\n\n    //     this.setState({\n    //         apartments: array,\n    //     });\n    //\n    // };\n\n    render() {\n\n        const { cities, filtered } = this.state;\n\n        const buildSquareDetails = () => {\n            return filtered.map((item, i) => {\n                return (\n                    <Card {...item} cities={cities} key={i}/>\n                )\n            })\n        };\n\n        return (\n            <div style={{overflow:\"hidden\"}}>\n                <div>\n                    <Filters updateGalleryItems={this.updateGalleryItems} filtered={this.state.filtered}/>\n                </div>\n\n                <div className={\"row m-0 d-flex justify-content-around\"}>\n                    {buildSquareDetails()}\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}