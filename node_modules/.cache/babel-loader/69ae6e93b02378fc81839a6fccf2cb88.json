{"ast":null,"code":"var _jsxFileName = \"/Users/kristina/Desktop/experis/week_9/realtor/src/pages/search/gallery.jsx\";\nimport React from 'react';\nimport Card from \"../../components/card/card.jsx\";\nimport Filters from \"./filters/filters\";\nimport api from \"../../server_api/api\";\n\nclass Gallery extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateGalleryItems = data => {\n      // if(data.minPrice){\n      //     data.minPrice = this.data_price_multiplication(data.minPrice);\n      // }\n      // if(data.maxPrice){\n      //      data.maxPrice = this.data_price_multiplication(data.maxPrice);\n      // }\n      this.setState({\n        country: data.country\n      });\n      data = this.dataToString(data);\n      this.setState({\n        filtered: data\n      });\n      this.setState({\n        apartments: this.state.apartments\n      }, () => this.getdata());\n    };\n\n    this.state = {\n      apartments: [],\n      filtered: \"\",\n      countries: []\n    };\n  }\n\n  async componentDidMount() {\n    const data = await this.getdata();\n    let countries_array = [];\n    data.data.apartments.map(item => {\n      return countries_array.push(item.country);\n    });\n    this.setState({\n      countries: Array.from(new Set(countries_array))\n    });\n  }\n\n  async getdata() {\n    const data = await api.getfilteredApartments(this.state.filtered);\n    this.setState({\n      apartments: data.data.apartments\n    });\n    return data;\n  }\n\n  // data_price_multiplication = (price) => {\n  //     if (price && typeof price !== \"number\") {\n  //         let multiplication_price_max = price.slice(-1);\n  //\n  //         if (multiplication_price_max === \"k\") {\n  //             price = parseInt(price.slice(1)) * 1000;\n  //         } else if (multiplication_price_max === \"M\") {\n  //             price = parseInt(price.slice(1)) * 1000000;\n  //         }\n  //     }\n  //     return price;\n  // };\n  dataToString(data) {\n    let str = \"\";\n\n    for (let prop in data) {\n      str += prop + '=';\n      str += data[prop] + '&';\n    }\n\n    return str;\n  }\n\n  render() {\n    console.log(this.state);\n    const apartments = this.state.apartments;\n    return React.createElement(\"div\", {\n      style: {\n        overflow: \"hidden\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Filters, {\n      updateGalleryItems: this.updateGalleryItems,\n      countries: this.state.countries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row m-0 d-flex justify-content-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, apartments.map((item, i) => {\n      return React.createElement(Card, Object.assign({}, item, {\n        type: this.props.type,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }));\n    })));\n  }\n\n}\n\nexport default Gallery;","map":{"version":3,"sources":["/Users/kristina/Desktop/experis/week_9/realtor/src/pages/search/gallery.jsx"],"names":["React","Card","Filters","api","Gallery","Component","constructor","props","updateGalleryItems","data","setState","country","dataToString","filtered","apartments","state","getdata","countries","componentDidMount","countries_array","map","item","push","Array","from","Set","getfilteredApartments","str","prop","render","console","log","overflow","i","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Card from \"../../components/card/card.jsx\";\nimport Filters from \"./filters/filters\";\nimport api from \"../../server_api/api\";\n\nclass Gallery extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apartments: [],\n            filtered: \"\",\n            countries: [],\n        }\n    };\n\n    async componentDidMount(){\n        const data = await this.getdata();\n        let countries_array= [];\n        data.data.apartments.map(item => {return countries_array.push(item.country)});\n        this.setState({\n            countries: Array.from(new Set(countries_array)),\n        });\n    }\n\n    async getdata(){\n        const data = await api.getfilteredApartments(this.state.filtered);\n        this.setState({\n            apartments:data.data.apartments,\n        });\n\n        return data\n    }\n\n    updateGalleryItems  = (data) => {\n\n       // if(data.minPrice){\n       //     data.minPrice = this.data_price_multiplication(data.minPrice);\n       // }\n       // if(data.maxPrice){\n       //      data.maxPrice = this.data_price_multiplication(data.maxPrice);\n       // }\n\n       this.setState({country: data.country });\n\n       data = this.dataToString(data);\n        this.setState({\n            filtered: data,\n        });\n        this.setState({\n            apartments: this.state.apartments,\n        }, () => this.getdata());\n    };\n\n    // data_price_multiplication = (price) => {\n    //     if (price && typeof price !== \"number\") {\n    //         let multiplication_price_max = price.slice(-1);\n    //\n    //         if (multiplication_price_max === \"k\") {\n    //             price = parseInt(price.slice(1)) * 1000;\n    //         } else if (multiplication_price_max === \"M\") {\n    //             price = parseInt(price.slice(1)) * 1000000;\n    //         }\n    //     }\n    //     return price;\n    // };\n\n    dataToString(data) {\n        let str = \"\";\n        for (let prop in data) {\n            str += prop + '=';\n            str += data[prop] + '&'\n        }\n        return str;\n    }\n\n    render() {\n        console.log(this.state);\n\n        const {apartments} = this.state;\n        return (\n            <div style={{overflow:\"hidden\"}}>\n                <div>\n                    <Filters updateGalleryItems={this.updateGalleryItems} countries={this.state.countries} />\n                </div>\n\n                <div className={\"row m-0 d-flex justify-content-around\"}>\n                    {apartments.map((item, i) => {\n                        return (\n                            <Card {...item} type={this.props.type} key={i}/>\n                        )\n                    })}\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}