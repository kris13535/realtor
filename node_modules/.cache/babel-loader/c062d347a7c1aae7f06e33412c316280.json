{"ast":null,"code":"var _jsxFileName = \"/Users/kristina/Desktop/experis/week_9/realtor/src/pages/search/gallery.jsx\";\nimport React from 'react';\nimport Card from \"../../components/card/card.jsx\";\nimport Filters from \"./filters/filters\";\nimport api from \"../../server_api/api\";\n\nclass Gallery extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateGalleryItems = data => {\n      if (data.minPrice) {\n        data.minPrice = this.data_price_multiplication(data.minPrice);\n      }\n\n      if (data.maxPrice) {\n        data.maxPrice = this.data_price_multiplication(data.maxPrice);\n      }\n\n      this.setState({\n        country: data.country\n      });\n      data = this.dataToString(data);\n      this.setState({\n        filtered: data\n      }, () => this.getdata()); // let {cities, apartments, } = this.state;\n      // let temp = this.state.apartments;\n      // let new_apartments = [];\n      //\n      //\n      // new_apartments = temp.filter(function (apartment) {\n      //                 const city = cities.find(city => city.id === apartment.cityId);\n      //                 const city_name = city.label;\n      //                 if (city_name.toLowerCase().includes(data.city.toLowerCase())){ return apartment}\n      //             });\n      //\n      // if (data.price_min || data.price_max) {\n      //     data.price_min = this.data_price_multiplication(data.price_min);\n      //     data.price_max = this.data_price_multiplication(data.price_max);\n      //\n      //     if (data.price_max || data.price_min) {\n      //         new_apartments = new_apartments.filter(obj => this.checkRange(obj, data.price_min , data.price_max , \"price\"))\n      //     }\n      // }\n      // if (data.bed_min || data.bed_max) {\n      //     new_apartments = new_apartments.filter (obj => this.checkRange(obj, data.bed_min, data.bed_max, \"number_of_beds\"))\n      // }\n      // if (data.room_min || data.room_max) {\n      //     new_apartments = new_apartments.filter(obj => this.checkRange(obj, data.room_min, data.room_max, \"number_of_rooms\"))\n      // }\n      // if (data.no_filters){\n      //         new_apartments = temp;\n      // }\n      // this.setState({filtered:new_apartments})\n    };\n\n    this.data_price_multiplication = price => {\n      if (price && typeof price !== \"number\") {\n        let multiplication_price_max = price.slice(-1);\n\n        if (multiplication_price_max === \"k\") {\n          price = parseInt(price.slice(1)) * 1000;\n        } else if (multiplication_price_max === \"M\") {\n          price = parseInt(price.slice(1)) * 1000000;\n        }\n      }\n\n      return price;\n    };\n\n    this.state = {\n      apartments: [],\n      filtered: \"\",\n      countries: []\n    };\n  }\n\n  async componentDidMount() {\n    const data = await this.getdata();\n    let countries_array = []; // data.data.apartments.map(item => {return countries_array.push(item.country)});\n\n    this.setState({\n      countries: Array.from(new Set(countries_array)),\n      apartments: data.data.apartments\n    });\n  }\n\n  async getdata() {\n    const data = await api.getfilteredApartments(this.state.filtered);\n    console.log(data);\n    this.setState({\n      apartments: data.data.apartments\n    });\n    return data;\n  } // checkRange = ( value, min, max, label) => {\n  //     let cur_val = value[label];\n  //     if (label === 'price') {\n  //         cur_val = value[label]*100000;\n  //     }\n  //     min = (min === undefined || min === \"\") ?  0 : min;\n  //     max = (max === undefined || max === \"\") ?  Infinity : max;\n  //\n  //     return (cur_val >= min && cur_val <= max);\n  // };\n  //\n\n\n  dataToString(data) {\n    let str = \"\";\n\n    for (let prop in data) {\n      str += prop + '=';\n      str += data[prop] + '&';\n    }\n\n    return str;\n  }\n\n  render() {\n    const _this$state = this.state,\n          cities = _this$state.cities,\n          apartments = _this$state.apartments;\n\n    const buildSquareDetails = () => {\n      return apartments.map((item, i) => {\n        return React.createElement(Card, Object.assign({}, item, {\n          cities: cities,\n          type: this.props.type,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }));\n      });\n    };\n\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      style: {\n        overflow: \"hidden\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Filters, {\n      updateGalleryItems: this.updateGalleryItems,\n      countries: this.state.countries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row m-0 d-flex justify-content-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, apartments.map((item, i) => {\n      return React.createElement(Card, Object.assign({}, item, {\n        cities: cities,\n        type: this.props.type,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }));\n    })));\n  }\n\n}\n\nexport default Gallery;","map":{"version":3,"sources":["/Users/kristina/Desktop/experis/week_9/realtor/src/pages/search/gallery.jsx"],"names":["React","Card","Filters","api","Gallery","Component","constructor","props","updateGalleryItems","data","minPrice","data_price_multiplication","maxPrice","setState","country","dataToString","filtered","getdata","price","multiplication_price_max","slice","parseInt","state","apartments","countries","componentDidMount","countries_array","Array","from","Set","getfilteredApartments","console","log","str","prop","render","cities","buildSquareDetails","map","item","i","type","overflow"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Card from \"../../components/card/card.jsx\";\nimport Filters from \"./filters/filters\";\nimport api from \"../../server_api/api\";\n\nclass Gallery extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apartments: [],\n            filtered: \"\",\n            countries: [],\n        }\n    };\n\n    async componentDidMount(){\n        const data = await this.getdata();\n        let countries_array= [];\n        // data.data.apartments.map(item => {return countries_array.push(item.country)});\n        this.setState({\n            countries: Array.from(new Set(countries_array)),\n            apartments:data.data.apartments,\n        });\n        \n\n\n    }\n\n    async getdata(){\n        const data = await api.getfilteredApartments(this.state.filtered);\n        console.log(data);\n\n        this.setState({\n            apartments:data.data.apartments,\n        });\n\n        return data\n    }\n\n    // checkRange = ( value, min, max, label) => {\n    //     let cur_val = value[label];\n    //     if (label === 'price') {\n    //         cur_val = value[label]*100000;\n    //     }\n    //     min = (min === undefined || min === \"\") ?  0 : min;\n    //     max = (max === undefined || max === \"\") ?  Infinity : max;\n    //\n    //     return (cur_val >= min && cur_val <= max);\n    // };\n    //\n\n    updateGalleryItems  = (data) => {\n\n       if(data.minPrice){\n           data.minPrice = this.data_price_multiplication(data.minPrice);\n       }\n       if(data.maxPrice){\n            data.maxPrice = this.data_price_multiplication(data.maxPrice);\n       }\n\n       this.setState({country: data.country });\n\n       data = this.dataToString(data);\n        this.setState({\n            filtered: data,\n        }, () => this.getdata());\n\n\n        // let {cities, apartments, } = this.state;\n        // let temp = this.state.apartments;\n        // let new_apartments = [];\n        //\n        //\n        // new_apartments = temp.filter(function (apartment) {\n        //                 const city = cities.find(city => city.id === apartment.cityId);\n        //                 const city_name = city.label;\n        //                 if (city_name.toLowerCase().includes(data.city.toLowerCase())){ return apartment}\n        //             });\n        //\n        // if (data.price_min || data.price_max) {\n        //     data.price_min = this.data_price_multiplication(data.price_min);\n        //     data.price_max = this.data_price_multiplication(data.price_max);\n        //\n        //     if (data.price_max || data.price_min) {\n        //         new_apartments = new_apartments.filter(obj => this.checkRange(obj, data.price_min , data.price_max , \"price\"))\n        //     }\n        // }\n        // if (data.bed_min || data.bed_max) {\n        //     new_apartments = new_apartments.filter (obj => this.checkRange(obj, data.bed_min, data.bed_max, \"number_of_beds\"))\n        // }\n        // if (data.room_min || data.room_max) {\n        //     new_apartments = new_apartments.filter(obj => this.checkRange(obj, data.room_min, data.room_max, \"number_of_rooms\"))\n        // }\n        // if (data.no_filters){\n        //         new_apartments = temp;\n        // }\n\n        // this.setState({filtered:new_apartments})\n    };\n\n    data_price_multiplication = (price) => {\n        if (price && typeof price !== \"number\") {\n            let multiplication_price_max = price.slice(-1);\n\n            if (multiplication_price_max === \"k\") {\n                price = parseInt(price.slice(1)) * 1000;\n            } else if (multiplication_price_max === \"M\") {\n                price = parseInt(price.slice(1)) * 1000000;\n            }\n        }\n        return price;\n    };\n\n    dataToString(data) {\n        let str = \"\";\n        for (let prop in data) {\n            str += prop + '=';\n            str += data[prop] + '&'\n        }\n        return str;\n    }\n\n    render() {\n        const { cities, apartments } = this.state;\n        const buildSquareDetails = () => {\n            return apartments.map((item, i) => {\n                return (\n                    <Card {...item} cities={cities} type={this.props.type} key={i}/>\n                )\n            })\n        };\n        console.log(this.state);\n        return (\n            <div style={{overflow:\"hidden\"}}>\n                <div>\n                    <Filters updateGalleryItems={this.updateGalleryItems} countries={this.state.countries} />\n                </div>\n\n                <div className={\"row m-0 d-flex justify-content-around\"}>\n                    {apartments.map((item, i) => {\n                        return (\n                            <Card {...item} cities={cities} type={this.props.type} key={i}/>\n                        )\n                    })}\n                    {/*{buildSquareDetails()}*/}\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}