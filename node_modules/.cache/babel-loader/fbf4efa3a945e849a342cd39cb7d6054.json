{"ast":null,"code":"var _jsxFileName = \"/Users/kristina/Desktop/experis/week_9/img_page/src/components/search_page/gallery.jsx\";\nimport React from 'react';\nimport Card from \"./card.jsx\";\nimport Filters from \"./filters\";\n\nclass Gallery extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateGalleryItems = data => {\n      let array = this.state.apartments;\n\n      const checkRange = (value, min, max, label) => {\n        min = min === undefined || min === \"\" ? 0 : min;\n        max = max === undefined || max === \"\" ? Infinity : max;\n        return value[label] >= min && value[label] <= max;\n      };\n\n      if (data.city) {\n        console.log(this.state.cities);\n        array = array.filter(function (apartment) {\n          const city = this.state.cities.find(city => city.id === apartment.cityId);\n          const city_name = city.label;\n\n          if (city_name.toLowerCase().includes(data.city.toLowerCase())) {\n            return array;\n          }\n        });\n      } else if (data.price_min || data.price_max) {\n        if (data.price_min && typeof data.price_min != \"number\") {\n          let multiplication_price_min = data.price_min.slice(-1);\n\n          if (multiplication_price_min === \"k\") {\n            data.price_min = parseInt(data.price_min.slice(1)) * 1000;\n          } else if (multiplication_price_min === \"M\") {\n            data.price_min = parseInt(data.price_min.slice(1)) * 1000000;\n          }\n        }\n\n        if (data.price_max && typeof data.price_max !== \"number\") {\n          let multiplication_price_max = data.price_max.slice(-1);\n\n          if (multiplication_price_max === \"k\") {\n            data.price_max = parseInt(data.price_max.slice(1)) * 1000;\n          } else if (multiplication_price_max === \"M\") {\n            data.price_max = parseInt(data.price_max.slice(1)) * 1000000;\n          }\n        }\n\n        if (data.price_max || data.price_min) {\n          array = array.filter(obj => checkRange(obj, data.price_min, data.price_max, \"price\"));\n        }\n      } else if (data.bed_min || data.bed_max) {\n        array = array.filter(obj => checkRange(obj, data.bed_min, data.bed_max, \"number_of_beds\"));\n      } else if (data.room_min || data.room_max) {\n        array = array.filter(obj => checkRange(obj, data.room_min, data.room_max, \"number_of_rooms\"));\n      }\n\n      this.setState({\n        apartments: array\n      });\n    };\n\n    this.state = {\n      apartments: this.props.apartments,\n      cities: this.props.cities\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          apartments = _this$state.apartments,\n          cities = _this$state.cities;\n\n    const buildSquareDetails = () => {\n      return apartments.map((item, i) => {\n        return React.createElement(Card, Object.assign({}, item, {\n          cities: cities,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }));\n      });\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Filters, {\n      updateGalleryItems: this.updateGalleryItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, buildSquareDetails()));\n  }\n\n}\n\nexport default Gallery;","map":{"version":3,"sources":["/Users/kristina/Desktop/experis/week_9/img_page/src/components/search_page/gallery.jsx"],"names":["React","Card","Filters","Gallery","Component","constructor","props","updateGalleryItems","data","array","state","apartments","checkRange","value","min","max","label","undefined","Infinity","city","console","log","cities","filter","apartment","find","id","cityId","city_name","toLowerCase","includes","price_min","price_max","multiplication_price_min","slice","parseInt","multiplication_price_max","obj","bed_min","bed_max","room_min","room_max","setState","render","buildSquareDetails","map","item","i"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Card from \"./card.jsx\";\nimport Filters from \"./filters\";\n\nclass Gallery extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apartments: this.props.apartments,\n            cities: this.props.cities,\n        }\n\n    };\n\n    updateGalleryItems = (data) => {\n\n        let array = this.state.apartments;\n\n         const checkRange = ( value, min, max, label) => {\n\n            min = (min === undefined || min === \"\") ?  0 : min;\n            max = (max === undefined || max === \"\") ?  Infinity : max;\n\n            return (value[label] >= min && value[label] <= max);\n        };\n\n\n        if (data.city) {console.log(this.state.cities);\n            array = array.filter(function (apartment) {\n                const city = this.state.cities.find(city => city.id === apartment.cityId);\n                const city_name = city.label;\n                if (city_name.toLowerCase().includes(data.city.toLowerCase())) {\n                    return array;\n                }\n            });\n\n        } else if (data.price_min || data.price_max) {\n            if (data.price_min && typeof data.price_min != \"number\") {\n                let multiplication_price_min = data.price_min.slice(-1);\n\n                if (multiplication_price_min === \"k\") {\n                    data.price_min = parseInt(data.price_min.slice(1)) * 1000;\n                } else if (multiplication_price_min === \"M\") {\n                    data.price_min = parseInt(data.price_min.slice(1)) * 1000000;\n                }\n            }\n\n            if (data.price_max && typeof data.price_max !== \"number\") {\n                let multiplication_price_max = data.price_max.slice(-1);\n\n                if (multiplication_price_max === \"k\") {\n                    data.price_max = parseInt(data.price_max.slice(1)) * 1000;\n                } else if (multiplication_price_max === \"M\") {\n                    data.price_max = parseInt(data.price_max.slice(1)) * 1000000;\n                }\n            }\n\n            if  (data.price_max || data.price_min){\n                array = array.filter (obj => checkRange(obj, data.price_min, data.price_max, \"price\"));\n            }\n        }else if (data.bed_min || data.bed_max) {\n                array = array.filter (obj => checkRange(obj, data.bed_min, data.bed_max, \"number_of_beds\"));\n        }else if (data.room_min || data.room_max) {\n            array = array.filter(obj => checkRange(obj, data.room_min, data.room_max, \"number_of_rooms\"));\n        }\n\n        this.setState({\n            apartments: array,\n        });\n\n    };\n\n    render() {\n\n        const {apartments, cities} = this.state;\n        const buildSquareDetails = () => {\n            return apartments.map((item, i) => {\n                return (\n                    <Card {...item} cities={cities} key={i}/>\n                )\n            })\n        };\n\n        return (\n            <div>\n                <div>\n                    <Filters updateGalleryItems={this.updateGalleryItems}/>\n                </div>\n\n                <div className={\"row\"}>\n                    {buildSquareDetails()}\n\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}